/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/escape-carriage";
exports.ids = ["vendor-chunks/escape-carriage"];
exports.modules = {

/***/ "(ssr)/./node_modules/escape-carriage/index.js":
/*!***********************************************!*\
  !*** ./node_modules/escape-carriage/index.js ***!
  \***********************************************/
/***/ ((module) => {

eval("/**\n * Escape carrigage returns like a terminal\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturn(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  while (/\\r./.test(txt)) {\n    txt = txt.replace(/^([^\\r\\n]*)\\r+([^\\r\\n]+)/gm, function (_, base, insert) {\n      return insert + base.slice(insert.length);\n    });\n  }\n  return txt;\n}\n\nfunction findLongestString(arr) {\n  var longest = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[longest].length <= arr[i].length) {\n      longest = i;\n    }\n  }\n  return longest;\n}\n\nfunction escapeSingleLineSafe(txt) {\n  if (!/\\r/.test(txt)) return txt;\n  var arr = txt.split(\"\\r\");\n  var res = [];\n\n  while (arr.length > 0) {\n    var longest = findLongestString(arr);\n    res.push(arr[longest]);\n    arr = arr.slice(longest + 1);\n  }\n\n  return res.join(\"\\r\");\n}\n\n/**\n * Safely escape carrigage returns like a terminal.\n * This allows to escape carrigage returns while allowing future output to be appended\n * without loosing information.\n * Use this as a intermediate escape step if your stream hasn't completed yet.\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturnSafe(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  if (!/\\n/.test(txt)) return escapeSingleLineSafe(txt);\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  var idx = txt.lastIndexOf(\"\\n\");\n\n  return (\n    escapeCarriageReturn(txt.slice(0, idx)) +\n    \"\\n\" +\n    escapeSingleLineSafe(txt.slice(idx + 1))\n  );\n}\n\nmodule.exports = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturn = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturnSafe = escapeCarriageReturnSafe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXNjYXBlLWNhcnJpYWdlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWSxXQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksV0FBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQztBQUNuQyx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXNjYXBlLWNhcnJpYWdlL2luZGV4LmpzPzQzZDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFc2NhcGUgY2FycmlnYWdlIHJldHVybnMgbGlrZSBhIHRlcm1pbmFsXG4gKiBAcGFyYW0ge3N0cmluZ30gdHh0IC0gU3RyaW5nIHRvIGVzY2FwZS5cbiAqIEByZXR1cm4ge3N0cmluZ30gICAgLSBFc2NhcGVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gZXNjYXBlQ2FycmlhZ2VSZXR1cm4odHh0KSB7XG4gIGlmICghdHh0KSByZXR1cm4gXCJcIjtcbiAgaWYgKCEvXFxyLy50ZXN0KHR4dCkpIHJldHVybiB0eHQ7XG4gIHR4dCA9IHR4dC5yZXBsYWNlKC9cXHIrXFxuL2dtLCBcIlxcblwiKTsgLy8gXFxyIGZvbGxvd2VkIGJ5IFxcbiAtLT4gbmV3bGluZVxuICB3aGlsZSAoL1xcci4vLnRlc3QodHh0KSkge1xuICAgIHR4dCA9IHR4dC5yZXBsYWNlKC9eKFteXFxyXFxuXSopXFxyKyhbXlxcclxcbl0rKS9nbSwgZnVuY3Rpb24gKF8sIGJhc2UsIGluc2VydCkge1xuICAgICAgcmV0dXJuIGluc2VydCArIGJhc2Uuc2xpY2UoaW5zZXJ0Lmxlbmd0aCk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHR4dDtcbn1cblxuZnVuY3Rpb24gZmluZExvbmdlc3RTdHJpbmcoYXJyKSB7XG4gIHZhciBsb25nZXN0ID0gMDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoYXJyW2xvbmdlc3RdLmxlbmd0aCA8PSBhcnJbaV0ubGVuZ3RoKSB7XG4gICAgICBsb25nZXN0ID0gaTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGxvbmdlc3Q7XG59XG5cbmZ1bmN0aW9uIGVzY2FwZVNpbmdsZUxpbmVTYWZlKHR4dCkge1xuICBpZiAoIS9cXHIvLnRlc3QodHh0KSkgcmV0dXJuIHR4dDtcbiAgdmFyIGFyciA9IHR4dC5zcGxpdChcIlxcclwiKTtcbiAgdmFyIHJlcyA9IFtdO1xuXG4gIHdoaWxlIChhcnIubGVuZ3RoID4gMCkge1xuICAgIHZhciBsb25nZXN0ID0gZmluZExvbmdlc3RTdHJpbmcoYXJyKTtcbiAgICByZXMucHVzaChhcnJbbG9uZ2VzdF0pO1xuICAgIGFyciA9IGFyci5zbGljZShsb25nZXN0ICsgMSk7XG4gIH1cblxuICByZXR1cm4gcmVzLmpvaW4oXCJcXHJcIik7XG59XG5cbi8qKlxuICogU2FmZWx5IGVzY2FwZSBjYXJyaWdhZ2UgcmV0dXJucyBsaWtlIGEgdGVybWluYWwuXG4gKiBUaGlzIGFsbG93cyB0byBlc2NhcGUgY2FycmlnYWdlIHJldHVybnMgd2hpbGUgYWxsb3dpbmcgZnV0dXJlIG91dHB1dCB0byBiZSBhcHBlbmRlZFxuICogd2l0aG91dCBsb29zaW5nIGluZm9ybWF0aW9uLlxuICogVXNlIHRoaXMgYXMgYSBpbnRlcm1lZGlhdGUgZXNjYXBlIHN0ZXAgaWYgeW91ciBzdHJlYW0gaGFzbid0IGNvbXBsZXRlZCB5ZXQuXG4gKiBAcGFyYW0ge3N0cmluZ30gdHh0IC0gU3RyaW5nIHRvIGVzY2FwZS5cbiAqIEByZXR1cm4ge3N0cmluZ30gICAgLSBFc2NhcGVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gZXNjYXBlQ2FycmlhZ2VSZXR1cm5TYWZlKHR4dCkge1xuICBpZiAoIXR4dCkgcmV0dXJuIFwiXCI7XG4gIGlmICghL1xcci8udGVzdCh0eHQpKSByZXR1cm4gdHh0O1xuICBpZiAoIS9cXG4vLnRlc3QodHh0KSkgcmV0dXJuIGVzY2FwZVNpbmdsZUxpbmVTYWZlKHR4dCk7XG4gIHR4dCA9IHR4dC5yZXBsYWNlKC9cXHIrXFxuL2dtLCBcIlxcblwiKTsgLy8gXFxyIGZvbGxvd2VkIGJ5IFxcbiAtLT4gbmV3bGluZVxuICB2YXIgaWR4ID0gdHh0Lmxhc3RJbmRleE9mKFwiXFxuXCIpO1xuXG4gIHJldHVybiAoXG4gICAgZXNjYXBlQ2FycmlhZ2VSZXR1cm4odHh0LnNsaWNlKDAsIGlkeCkpICtcbiAgICBcIlxcblwiICtcbiAgICBlc2NhcGVTaW5nbGVMaW5lU2FmZSh0eHQuc2xpY2UoaWR4ICsgMSkpXG4gICk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXNjYXBlQ2FycmlhZ2VSZXR1cm47XG5tb2R1bGUuZXhwb3J0cy5lc2NhcGVDYXJyaWFnZVJldHVybiA9IGVzY2FwZUNhcnJpYWdlUmV0dXJuO1xubW9kdWxlLmV4cG9ydHMuZXNjYXBlQ2FycmlhZ2VSZXR1cm5TYWZlID0gZXNjYXBlQ2FycmlhZ2VSZXR1cm5TYWZlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/escape-carriage/index.js\n");

/***/ })

};
;